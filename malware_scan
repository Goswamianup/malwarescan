#!/bin/bash

# Function to check if a URL is a malware link
check_malware_link() {
    local url="$1"
    local response=$(curl -sIL "$url" | grep "HTTP/" | tail -n 1)
    local status_code=$(echo "$response" | awk '{print $2}')
    
    # Checking if the response is successful (2xx status code)
    if [[ "$status_code" =~ ^2[0-9]{2}$ ]]; then
        echo "URL $url is clean"
    else
        echo "URL $url might be malicious (HTTP status code: $status_code)"
        echo "$url" >> malware_links.txt
    fi
}

# Main function to scan the website for potential malware links
scan_website() {
    local website="$1"
    local malware_links_count=0
    
    echo "Scanning website: $website"
    
    # Extracting all links from the website
    local links=$(curl -s "$website" | grep -oE 'href="([^"#]+)"' | cut -d'"' -f2)
    
    # Iterating through each link and checking for potential malware
    while IFS= read -r link; do
        check_malware_link "$link"
        if [[ "$?" -eq 0 ]]; then
            ((malware_links_count++))
        fi
    done <<< "$links"
    
    echo "Total malware links found: $malware_links_count"
}

# Check if URL is provided as an argument
if [ -z "$1" ]; then
    echo "Usage: $0 <website>"
    exit 1
fi

# Start scanning the website
scan_website "$1"

